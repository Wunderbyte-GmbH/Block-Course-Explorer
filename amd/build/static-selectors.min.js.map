{"version":3,"file":"static-selectors.min.js","sources":["../src/static-selectors.js"],"sourcesContent":["import {dropDownTemplate} from \"./templates\";\nimport {get_string as getString} from 'core/str';\n\nlet dropDownData = null;\nlet instanceRoot = \"\";\n\nexport const setInstanceId = (id) => {\n  instanceRoot = document.getElementById('id-' + id);\n};\n\n\nexport const FILTER_TYPES = {\n  QUERY: \"QUERY\",\n  CATEGORY: \"CATEGORY\",\n  TOPICS: \"TOPICS\",\n  TARGET_GROUP: \"TARGET_GROUP\",\n  CURRENT_PAGE: \"CURRENT_PAGE\",\n  ORDER: \"ORDER\",\n};\nexport const FIELD_FILTER_MAP = {\n  category: \"CATEGORY\",\n  mc_moodle_themen: \"TOPICS\",\n  mc_moodle_zielgruppe: \"TARGET_GROUP\"\n};\nexport const SORT_TYPES = {\n  alphabetASC: {\n    field: \"title\",\n    direction: 1,\n    name: 'Alphabetisch aufsteigend'\n  },\n  alphabetDESC: {\n    field: \"title\",\n    direction: -1,\n    name: 'Alphabetisch absteigend'\n  },\n  mcOriginalDESC: {\n    field: \"MCOriginal\",\n    direction: -1,\n    name: 'MINT-Campus-Original zuerst'\n  },\n  favouritesDESC: {\n    field: \"favourite\",\n    direction: -1,\n    name: 'Favoriten zuerst'\n  }\n};\ngetString('sortalphabetasc', 'block_course_explorer').then((string) => {\n  SORT_TYPES.alphabetASC.name = string;\n  return string;\n}).catch();\ngetString('sortalphabetdesc', 'block_course_explorer').then((string) => {\n  SORT_TYPES.alphabetDESC.name = string;\n  return string;\n}).catch();\ngetString('sortmcoriginaldesc', 'block_course_explorer').then((string) => {\n  SORT_TYPES.mcOriginalDESC.name = string;\n  return string;\n}).catch();\ngetString('sortfavouritesdesc', 'block_course_explorer').then((string) => {\n  SORT_TYPES.favouritesDESC.name = string;\n  return string;\n}).catch();\n\nexport const SELECTORS = {\n  MAIN_WRAPPER: \"cebMainWrapper\",\n  MAIN_CONTAINER: \"cebMainContainer\",\n  DROPDOWN_CONTAINER: \"cebDropDownContainer\",\n  LOADING_CONTAINER: \"cebLoadingContainer\",\n  SEARCH_INPUT: \"cebSearchInput\",\n  SEARCH_CLEAR_BUTTON: \"cebClearSearch\",\n  COURSE_COUNT: \"cebCourseCount\",\n  TOP_PAGINATION_CONTAINER: \"cebTopPaginationContainer\",\n  BOTTOM_PAGINATION_CONTAINER: \"cebBottomPaginationContainer\",\n  SORT_DROPDOWN_CONTAINER: \"cebSortContainer\",\n  COURSE_DETAIL_MODAL: \"ceb_modal\",\n};\n\nlet filterState = {\n  QUERY: null,\n  CURRENT_PAGE: 0,\n  PAGE_SIZE: 12,\n  ORDER: null,\n};\nfor (const key in FIELD_FILTER_MAP) {\n  filterState[FIELD_FILTER_MAP[key]] = null;\n}\n\nexport const getFilterState = () => {\n  return filterState;\n};\n\nexport const updateFilterState = (type, param) => {\n  if (param === null) {\n    return false;\n  }\n  const state = filterState[type];\n  if (state !== param) {\n    filterState.CURRENT_PAGE = 0;\n    filterState[type] = param;\n    return true;\n  }\n  return false;\n};\n\nconst resetFilterStateByType = (type) => {\n  if (filterState[type] === null) {\n    return false;\n  }\n  filterState[type] = null;\n  return true;\n};\n\nexport const getElement = (selector) => {\n  if (!instanceRoot) {\n    console.warn(\"No instance root set. Call setInstanceId(id) first.\");\n    return null;\n  }\n  return instanceRoot.querySelector(`#${selector}`);\n};\n\nexport const initDropDownData = (data) => {\n  dropDownData = data;\n};\n\nexport const prepareDropDowns = async(handleFilter, activeFilters, triggeredFilter, reset = false) => {\n  const dropdownContainer = getElement(SELECTORS.DROPDOWN_CONTAINER);\n  const dropDowns = [];\n  let caption = '';\n  for (let i = 0; i < dropDownData.length; i++) {\n    let filter = dropDownData[i];\n    const selectedOption = filterState[FIELD_FILTER_MAP[filter.name]];\n    let defaultOption = null;\n    if (selectedOption !== null) {\n      defaultOption = filter.options.find((option) => option.id == selectedOption) || null;\n    }\n\n    const options = filter.options;\n    if (activeFilters && triggeredFilter) {\n      const activeFilter = activeFilters.find((activeFilter) => activeFilter.name === filter.name);\n      options.forEach((option) => {\n        if (filter.name === triggeredFilter && !reset) {\n          return;\n        }\n        const match = activeFilter.options.find(filterOption => filterOption.name === option.name);\n        option.disabled = match === undefined;\n      });\n    }\n\n    caption = await getString(FIELD_FILTER_MAP[filter.name].toLowerCase() + 'filtercaption', 'block_course_explorer');\n    const dropDown = dropDownTemplate({\n      title: caption,\n      caption: defaultOption?.name || caption,\n      options: options,\n      selectedOption: defaultOption,\n      onOptionChange: (optionId) => {\n        if (updateFilterState(FIELD_FILTER_MAP[filter.name], optionId)) {\n          const filteredCourses = handleFilter();\n          const filters = getFiltersFromTargets(filteredCourses);\n          const triggeredFilter = filter.name;\n          prepareDropDowns(handleFilter, filters, triggeredFilter);\n        }\n      },\n      onReset: () => {\n        if (resetFilterStateByType(FIELD_FILTER_MAP[filter.name])) {\n          const filteredCourses = handleFilter();\n          const filters = getFiltersFromTargets(filteredCourses);\n          const triggeredFilter = filter.name;\n          prepareDropDowns(handleFilter, filters, triggeredFilter, true);\n        }\n      },\n      className: \"ceb-dropdown-\" + filter.name.toLowerCase(),\n    });\n    dropDowns.push(dropDown);\n  }\n\n  $(dropdownContainer).empty();\n  dropDowns.forEach(function(dropDown) {\n    $(dropdownContainer).append(dropDown);\n  });\n};\n\nexport const updateMainContainer = (elements) => {\n  const mainContainer = getElement(SELECTORS.MAIN_CONTAINER);\n  $(mainContainer).empty();\n  $(mainContainer).append(elements);\n};\n\nexport const initiateSearch = (handleFilter) => {\n  const searchInput = getElement(SELECTORS.SEARCH_INPUT);\n  const searchClearButton = getElement(SELECTORS.SEARCH_CLEAR_BUTTON);\n\n  searchInput.addEventListener(\"keyup\", (e) => {\n    if (updateFilterState(FILTER_TYPES.QUERY, e.target.value)) {\n      handleFilter(filterState);\n    }\n  });\n\n  searchClearButton.addEventListener(\"click\", () => {\n    searchInput.value = \"\";\n    if (updateFilterState(FILTER_TYPES.QUERY, \"\")) {\n      handleFilter(filterState);\n    }\n  });\n};\n\nexport const updateCourseCount = async(count) => {\n  const courseCount = getElement(SELECTORS.COURSE_COUNT);\n  const caption = await getString(count !== 1 ? 'coursecountcaption' : 'coursecountonecaption', 'block_course_explorer');\n  courseCount.innerHTML = `${count || \"0\"} ${caption}`;\n};\n\nexport const prepareSortDropdown = async(handleFilter) => {\n  const sortDropdownContainer = getElement(SELECTORS.SORT_DROPDOWN_CONTAINER);\n  const sortOptions = [];\n\n  for (const key in SORT_TYPES) {\n    sortOptions.push({\n      id: key, // TODO: rename in key\n      name: SORT_TYPES[key].name // TODO: rename in value and description\n    });\n  }\n\n  const selectedOption = filterState.ORDER;\n  let defaultOption = null;\n  if (selectedOption !== null) {\n    defaultOption = sortOptions.find((option) => option.id == selectedOption) || null;\n  }\n\n  const caption = await getString('sortcaption', 'block_course_explorer');\n  const sortDropDown = await dropDownTemplate({\n    title: caption,\n    caption: defaultOption?.name || caption,\n    options: sortOptions,\n    selectedOption: defaultOption,\n    onOptionChange: (optionId) => {\n      if (updateFilterState(FILTER_TYPES.ORDER, optionId)) {\n        handleFilter();\n        prepareSortDropdown(handleFilter);\n      }\n    },\n    onReset: () => {\n      if (resetFilterStateByType(FILTER_TYPES.ORDER)) {\n        handleFilter();\n        prepareSortDropdown(handleFilter);\n      }\n    }\n  });\n  $(sortDropdownContainer).empty();\n  $(sortDropdownContainer).append(sortDropDown);\n};\n\n\nconst getEmptyFilters = (keys) => {\n  const filters = [];\n  keys.forEach((key) => {\n    filters.push({\n      name: key,\n      options: []\n    });\n  });\n  return filters;\n};\n\nconst getFilterOptionsFromTargetsByKey = (key, targets) => {\n  let filterOptions = [];\n  const optionsCount = {};\n  targets.forEach((target) => {\n    if (target[key] === undefined || target[key] === null || target[key] === '') {\n      return;\n    }\n    if (Array.isArray(target[key])) {\n      target[key].forEach((item) => {\n        if (optionsCount[item.id]) {\n          optionsCount[item.id].count++;\n        } else {\n          optionsCount[item.id] = {\n            count: 1,\n            value: item.value\n          };\n        }\n      });\n    } else {\n      if (optionsCount[target[key].id]) {\n        optionsCount[target[key].id].count++;\n      } else {\n        optionsCount[target[key].id] = {\n          count: 1,\n          value: target[key].value\n        };\n      }\n    }\n  });\n  for (const option in optionsCount) {\n    filterOptions.push({\n      id: option,\n      name: optionsCount[option].value,\n      count: optionsCount[option].count\n    });\n  }\n\n  return filterOptions.sort((a, b) => {\n    if (a.name < b.name) {\n      return -1;\n    } else if (a.name > b.name) {\n      return 1;\n    } else {\n      return 0;\n    }\n  });\n};\n\nexport const getFiltersFromTargets = (targets) => {\n  const keys = [];\n  for (const key in FIELD_FILTER_MAP) {\n    keys.push(key);\n  }\n  const filters = getEmptyFilters(keys);\n\n  filters.forEach((filter) => {\n    filter.options = getFilterOptionsFromTargetsByKey(filter.name, targets);\n  });\n\n  return filters;\n};\n"],"names":["dropDownData","instanceRoot","id","document","getElementById","FILTER_TYPES","QUERY","CATEGORY","TOPICS","TARGET_GROUP","CURRENT_PAGE","ORDER","FIELD_FILTER_MAP","category","mc_moodle_themen","mc_moodle_zielgruppe","SORT_TYPES","alphabetASC","field","direction","name","alphabetDESC","mcOriginalDESC","favouritesDESC","then","string","catch","SELECTORS","MAIN_WRAPPER","MAIN_CONTAINER","DROPDOWN_CONTAINER","LOADING_CONTAINER","SEARCH_INPUT","SEARCH_CLEAR_BUTTON","COURSE_COUNT","TOP_PAGINATION_CONTAINER","BOTTOM_PAGINATION_CONTAINER","SORT_DROPDOWN_CONTAINER","COURSE_DETAIL_MODAL","filterState","PAGE_SIZE","key","updateFilterState","type","param","resetFilterStateByType","getElement","selector","querySelector","console","warn","data","prepareDropDowns","async","handleFilter","activeFilters","triggeredFilter","reset","dropdownContainer","dropDowns","caption","i","length","filter","selectedOption","defaultOption","options","find","option","activeFilter","forEach","match","filterOption","disabled","undefined","toLowerCase","dropDown","title","onOptionChange","optionId","filteredCourses","filters","getFiltersFromTargets","onReset","className","push","$","empty","append","elements","mainContainer","searchInput","searchClearButton","addEventListener","e","target","value","courseCount","count","innerHTML","prepareSortDropdown","sortDropdownContainer","sortOptions","sortDropDown","targets","keys","getEmptyFilters","filterOptions","optionsCount","Array","isArray","item","sort","a","b","getFilterOptionsFromTargetsByKey"],"mappings":"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"}