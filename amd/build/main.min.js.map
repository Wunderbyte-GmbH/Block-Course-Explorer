{"version":3,"file":"main.min.js","sources":["../src/main.js"],"sourcesContent":["// main.js\nimport {setWsToken} from \"./token\";\nimport {getCourseDetailsById, getCourses} from \"./api\";\nimport {courseCardTemplate} from \"./templates\";\nimport * as loading from \"./loading\";\nimport {\n  FIELD_FILTER_MAP,\n  FILTER_TYPES,\n  SELECTORS,\n  SORT_TYPES,\n  updateFilterState,\n  updateMainContainer,\n  initDropDownData,\n  prepareDropDowns,\n  initiateSearch,\n  updateCourseCount,\n  getFilterState,\n  prepareSortDropdown,\n  getFiltersFromTargets,\n  setInstanceId\n} from \"./static-selectors\";\nimport {createPagination} from \"./pagination\";\n\nexport const init = ({wsToken, categoryids, userid, instanceId}) => {\n  setInstanceId(instanceId);\n  setWsToken(wsToken);\n  loading.show();\n\n  getCourses(categoryids, userid, (response) => {\n    if (!Array.isArray(response)) {\n      console.error(\"Expected course array, got:\", response);\n      return;\n    }\n\n    const courses = response;\n    const filters = getFiltersFromTargets(courses);\n\n    const handleFilter = () => {\n      const filterStates = getFilterState();\n      let filteredCourses = [...courses];\n\n      if (filterStates[FILTER_TYPES.QUERY]) {\n        const search = filterStates[FILTER_TYPES.QUERY].toLowerCase();\n        filteredCourses = filteredCourses.filter(course =>\n          course.title.toLowerCase().includes(search) ||\n          course.description.toLowerCase().includes(search)\n        );\n      }\n\n      for (const key in FIELD_FILTER_MAP) {\n        const stateKey = FIELD_FILTER_MAP[key];\n        const value = filterStates[stateKey];\n        if (value !== null) {\n          filteredCourses = filteredCourses.filter(course => {\n            const field = course[key];\n            if (Array.isArray(field)) {\n              return field.some(item => item.id === value);\n            }\n            return field?.id === value;\n          });\n        }\n      }\n\n      if (filterStates.ORDER) {\n        const {direction, field} = SORT_TYPES[filterStates.ORDER];\n        filteredCourses.sort((a, b) => {\n          if (a[field] > b[field]) return direction;\n          if (a[field] < b[field]) return -direction;\n          return 0;\n        });\n      }\n\n      updateCourseCount(filteredCourses.length);\n      initiatePagination({\n        currentPage: filterStates.CURRENT_PAGE + 1,\n        total: filteredCourses.length,\n        perPage: filterStates.PAGE_SIZE,\n      });\n\n      updateMainContainer(\n        filteredCourses\n          .slice(filterStates.CURRENT_PAGE * filterStates.PAGE_SIZE, (filterStates.CURRENT_PAGE + 1) * filterStates.PAGE_SIZE)\n          .map(courseCardTemplate)\n      );\n\n      return filteredCourses;\n    };\n\n    const initiatePagination = ({currentPage, total, perPage}) => {\n      createPagination({\n        container: document.getElementById(`${instanceId}-${SELECTORS.TOP_PAGINATION_CONTAINER}`),\n        currentPage,\n        total,\n        perPage,\n        onChange: (page) => {\n          if (updateFilterState(FILTER_TYPES.CURRENT_PAGE, page - 1)) {\n            handleFilter();\n          }\n        },\n      });\n\n      createPagination({\n        container: document.getElementById(`${instanceId}-${SELECTORS.BOTTOM_PAGINATION_CONTAINER}`),\n        currentPage,\n        total,\n        perPage,\n        onChange: (page) => {\n          if (updateFilterState(FILTER_TYPES.CURRENT_PAGE, page - 1)) {\n            handleFilter();\n          }\n        },\n      });\n    };\n\n    initiateSearch(handleFilter);\n    initDropDownData(filters);\n    prepareDropDowns(handleFilter, filters, null);\n    prepareSortDropdown(handleFilter);\n    handleFilter();\n\n    setTimeout(() => loading.hide(), 1000);\n  });\n};\n"],"names":["_ref","wsToken","categoryids","userid","instanceId","loading","show","response","Array","isArray","console","error","courses","filters","handleFilter","filterStates","filteredCourses","FILTER_TYPES","QUERY","search","toLowerCase","filter","course","title","includes","description","key","FIELD_FILTER_MAP","value","field","some","item","id","ORDER","direction","SORT_TYPES","sort","a","b","length","initiatePagination","currentPage","CURRENT_PAGE","total","perPage","PAGE_SIZE","slice","map","courseCardTemplate","_ref2","container","document","getElementById","SELECTORS","TOP_PAGINATION_CONTAINER","onChange","page","BOTTOM_PAGINATION_CONTAINER","setTimeout","hide"],"mappings":"4tCAuBoBA,WAACC,QAACA,QAADC,YAAUA,YAAVC,OAAuBA,OAAvBC,WAA+BA,oDACpCA,kCACHH,SACXI,QAAQC,2BAEGJ,YAAaC,QAASI,eAC1BC,MAAMC,QAAQF,sBACjBG,QAAQC,MAAM,8BAA+BJ,gBAIzCK,QAAUL,SACVM,SAAU,0CAAsBD,SAEhCE,aAAe,WACbC,cAAe,yCACjBC,gBAAkB,IAAIJ,YAEtBG,aAAaE,8BAAaC,OAAQ,OAC9BC,OAASJ,aAAaE,8BAAaC,OAAOE,cAChDJ,gBAAkBA,gBAAgBK,QAAOC,QACvCA,OAAOC,MAAMH,cAAcI,SAASL,SACpCG,OAAOG,YAAYL,cAAcI,SAASL,cAIzC,MAAMO,OAAOC,kCAAkB,OAE5BC,MAAQb,aADGY,kCAAiBD,MAEpB,OAAVE,QACFZ,gBAAkBA,gBAAgBK,QAAOC,eACjCO,MAAQP,OAAOI,YACjBlB,MAAMC,QAAQoB,OACTA,MAAMC,MAAKC,MAAQA,KAAKC,KAAOJ,SAEjCC,MAAAA,aAAAA,MAAOG,MAAOJ,aAKvBb,aAAakB,MAAO,OAChBC,UAACA,UAADL,MAAYA,OAASM,4BAAWpB,aAAakB,OACnDjB,gBAAgBoB,MAAK,CAACC,EAAGC,IACnBD,EAAER,OAASS,EAAET,OAAeK,UAC5BG,EAAER,OAASS,EAAET,QAAgBK,UAC1B,iDAIOlB,gBAAgBuB,QAClCC,mBAAmB,CACjBC,YAAa1B,aAAa2B,aAAe,EACzCC,MAAO3B,gBAAgBuB,OACvBK,QAAS7B,aAAa8B,qDAItB7B,gBACG8B,MAAM/B,aAAa2B,aAAe3B,aAAa8B,WAAY9B,aAAa2B,aAAe,GAAK3B,aAAa8B,WACzGE,IAAIC,gCAGFhC,iBAGHwB,mBAAqBS,YAACR,YAACA,YAADE,MAAcA,MAAdC,QAAqBA,gDAC9B,CACfM,UAAWC,SAASC,eAAgB,GAAEhD,cAAciD,2BAAUC,4BAC9Db,YAAAA,YACAE,MAAAA,MACAC,QAAAA,QACAW,SAAWC,QACL,sCAAkBvC,8BAAayB,aAAcc,KAAO,IACtD1C,mDAKW,CACfoC,UAAWC,SAASC,eAAgB,GAAEhD,cAAciD,2BAAUI,+BAC9DhB,YAAAA,YACAE,MAAAA,MACAC,QAAAA,QACAW,SAAWC,QACL,sCAAkBvC,8BAAayB,aAAcc,KAAO,IACtD1C,uDAMOA,oDACED,+CACAC,aAAcD,QAAS,+CACpBC,cACpBA,eAEA4C,YAAW,IAAMrD,QAAQsD,QAAQ"}